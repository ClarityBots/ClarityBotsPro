<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Redirecting to ClarityBot...</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      font-family: Inter, Arial, sans-serif;
      background-color: #142233;
      color: #ffffff;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 100vh;
      text-align: center;
    }
    h1 {
      font-size: 1.8rem;
      margin-bottom: 1rem;
    }
    a {
      color: #87CEFA;
      text-decoration: underline;
    }
  </style>
</head>
<body>
  <h1>Taking you to your ClarityBot...</h1>
  <p>If nothing happens, <a id="manualLink" href="#">click here</a>.</p>

  <script type="module">
    import { clients } from './js/clientConfig.js';

    function getParam(name) {
      const params = new URLSearchParams(window.location.search);
      return params.get(name);
    }

    const company = getParam("company");
    const topic = getParam("topic");

    if (!company || !clients[company]) {
      document.body.innerHTML = `<h1>Unknown or missing company.</h1>`;
      throw new Error("Invalid company in URL.");
    }

    const client = clients[company];

    // Find topic index by label match
    const topicIndex = client.landingButtons.findIndex(btn => btn === topic);

    if (topicIndex === -1 || !client.gptLinks[topicIndex]) {
      document.body.innerHTML = `<h1>Unknown or missing topic.</h1>`;
      throw new Error("Invalid topic in URL.");
    }

    const redirectUrl = client.gptLinks[topicIndex];

    // Set manual link fallback
    document.getElementById("manualLink").href = redirectUrl;

    // Redirect
    window.location.href = redirectUrl;
  </script>
</body>
</html>
